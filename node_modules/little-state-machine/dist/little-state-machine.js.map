{"version":3,"file":"little-state-machine.js","sources":["../src/logic/storeFactory.ts","../src/constants.ts","../src/StateMachineContext.tsx","../src/stateMachine.tsx"],"sourcesContent":["import { STORE_DEFAULT_NAME } from '../constants';\nimport { MiddleWare, GlobalState } from '../types';\n\nfunction StoreFactory() {\n  let storageType: Storage;\n  let state: GlobalState = {};\n  let middleWares: MiddleWare[] = [];\n  let name = STORE_DEFAULT_NAME;\n\n  try {\n    storageType =\n      typeof sessionStorage !== 'undefined'\n        ? window.sessionStorage\n        : ({} as Storage);\n  } catch {\n    storageType = {} as Storage;\n  }\n\n  return {\n    updateStore(defaultValues: GlobalState) {\n      try {\n        state = JSON.parse(storageType.getItem(name) || '') || defaultValues;\n      } catch {\n        state = defaultValues;\n      }\n    },\n    saveStore() {\n      storageType.setItem(name, JSON.stringify(state));\n    },\n    get middleWares() {\n      return middleWares;\n    },\n    set middleWares(wares: MiddleWare[]) {\n      middleWares = wares;\n    },\n    get state() {\n      return state;\n    },\n    set state(value) {\n      state = value;\n    },\n    get name() {\n      return name;\n    },\n    set name(value) {\n      name = value;\n    },\n    get storageType() {\n      return storageType;\n    },\n    set storageType(value) {\n      storageType = value;\n    },\n  };\n}\n\nexport default StoreFactory();\n","export const STORE_DEFAULT_NAME = '__LSM__';\nexport const STORE_ACTION_NAME = '__LSM_NAME__';\n","import * as React from 'react';\nimport storeFactory from './logic/storeFactory';\nimport { StateMachineContextValue } from './types';\n\nconst StateMachineContext = React.createContext<StateMachineContextValue>(undefined as any);\n\nexport const StateMachineProvider: React.FC = ({ children }) => {\n  const [state, setState] = React.useState(storeFactory.state);\n\n  return (\n    <StateMachineContext.Provider\n      value={{ state, setState }}\n    >\n      { children }\n    </StateMachineContext.Provider>\n  );\n}\n\nexport function useStateMachineContext() {\n  const value = React.useContext<StateMachineContextValue>(StateMachineContext);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!value) {\n      console.error(`LSM context is undefined.`)\n    }\n  }\n\n  return value;\n}\n","import * as React from 'react';\nimport { useStateMachineContext } from './StateMachineContext';\nimport storeFactory from './logic/storeFactory';\nimport {\n  StateMachineOptions,\n  GlobalState,\n  AnyCallback,\n  AnyActions,\n  ActionsOutput,\n  PersistOptions,\n} from './types';\nimport { STORE_ACTION_NAME } from './constants';\n\nlet persistOption: PersistOptions = 'onAction';\n\nexport function createStore(\n  defaultState: GlobalState,\n  options?: StateMachineOptions,\n) {\n  if (options) {\n    options.name && (storeFactory.name = options.name);\n    options.storageType && (storeFactory.storageType = options.storageType);\n    options.middleWares && (storeFactory.middleWares = options.middleWares);\n    options.persist && (persistOption = options.persist);\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      window.__LSM_NAME__ = storeFactory.name;\n      window.__LSM_RESET__ = () =>\n        storeFactory.storageType.removeItem(storeFactory.name);\n    }\n  }\n\n  storeFactory.updateStore(defaultState);\n}\n\nconst actionTemplate = <TCallback extends AnyCallback>(\n  setState: React.Dispatch<React.SetStateAction<GlobalState>>,\n  callback: TCallback,\n) => (payload: Parameters<TCallback>[1]) => {\n  if (process.env.NODE_ENV !== 'production') {\n    window[STORE_ACTION_NAME] = callback.name;\n  }\n\n  storeFactory.state = callback(storeFactory.state, payload);\n\n  if (storeFactory.middleWares) {\n    storeFactory.state = storeFactory.middleWares.reduce(\n      (currentValue, currentFunction) =>\n        currentFunction(currentValue, callback.name, payload) || currentValue,\n      storeFactory.state,\n    );\n  }\n\n  setState(storeFactory.state);\n  persistOption === 'onAction' && storeFactory.saveStore();\n};\n\nexport function useStateMachine<\n  TCallback extends AnyCallback,\n  TActions extends AnyActions<TCallback>\n>(\n  actions?: TActions,\n): {\n  actions: ActionsOutput<TCallback, TActions>;\n  state: GlobalState;\n} {\n  const { state, setState } = useStateMachineContext();\n  const actionsRef = React.useRef(\n    Object.entries(actions || {}).reduce(\n      (previous, [key, callback]) =>\n        Object.assign({}, previous, {\n          [key]: actionTemplate(setState, callback),\n        }),\n      {} as ActionsOutput<TCallback, TActions>,\n    ),\n  );\n\n  React.useEffect(() => {\n    if (persistOption === 'beforeUnload') {\n      window.onbeforeunload = () => storeFactory.saveStore();\n    }\n  }, []);\n\n  return {\n    actions: actionsRef.current,\n    state,\n  };\n}\n"],"names":["storageType","state","middleWares","name","sessionStorage","window","updateStore","defaultValues","JSON","parse","getItem","saveStore","setItem","stringify","wares","value","StoreFactory","StateMachineContext","React","createContext","undefined","persistOption","children","useState","storeFactory","Provider","setState","defaultState","options","persist","actions","useContext","actionsRef","useRef","Object","entries","reduce","previous","assign","callback","payload","currentValue","currentFunction","actionTemplate","useEffect","onbeforeunload","current"],"mappings":"uTAGA,WACE,IAAIA,EACAC,EAAqB,GACrBC,EAA4B,GAC5BC,ECP4B,UDShC,IACEH,EAC4B,oBAAnBI,eACHC,OAAOD,eACN,GACP,SACAJ,EAAc,GAGhB,MAAO,CACLM,qBAAYC,GACV,IACEN,EAAQO,KAAKC,MAAMT,EAAYU,QAAQP,IAAS,KAAOI,EACvD,SACAN,EAAQM,IAGZI,qBACEX,EAAYY,QAAQT,EAAMK,KAAKK,UAAUZ,KAEvCC,kBACF,OAAOA,GAELA,gBAAYY,GACdZ,EAAcY,GAEZb,YACF,OAAOA,GAELA,UAAMc,GACRd,EAAQc,GAENZ,WACF,OAAOA,GAELA,SAAKY,GACPZ,EAAOY,GAELf,kBACF,OAAOA,GAELA,gBAAYe,GACdf,EAAce,IAKLC,GEpDTC,EAAsBC,EAAMC,mBAAwCC,GCStEC,EAAgC,wCDPU,gBAAGC,IAAAA,WACrBJ,EAAMK,SAASC,EAAavB,OAEtD,OACEiB,gBAACD,EAAoBQ,UACnBV,MAAO,CAAEd,WAAOyB,gBAEdJ,iCCGNK,EACAC,GAEIA,IACFA,EAAQzB,OAASqB,EAAarB,KAAOyB,EAAQzB,MAC7CyB,EAAQ5B,cAAgBwB,EAAaxB,YAAc4B,EAAQ5B,aAC3D4B,EAAQ1B,cAAgBsB,EAAatB,YAAc0B,EAAQ1B,aAC3D0B,EAAQC,UAAYR,EAAgBO,EAAQC,UAW9CL,EAAalB,YAAYqB,qCA6BzBG,GAKA,MDjDcZ,EAAMa,WAAqCd,GCiDjDhB,IAAAA,MAAOyB,IAAAA,SACTM,EAAad,EAAMe,OACvBC,OAAOC,QAAQL,GAAW,IAAIM,OAC5B,SAACC,kBACCH,OAAOI,OAAO,GAAID,gBAnCH,SACrBX,EACAa,mBACIC,GAKJhB,EAAavB,MAAQsC,EAASf,EAAavB,MAAOuC,GAE9ChB,EAAatB,cACfsB,EAAavB,MAAQuB,EAAatB,YAAYkC,OAC5C,SAACK,EAAcC,UACbA,EAAgBD,EAAcF,EAASpC,KAAMqC,IAAYC,GAC3DjB,EAAavB,QAIjByB,EAASF,EAAavB,OACJ,aAAlBoB,GAAgCG,EAAab,aAiB9BgC,CAAejB,aAE1B,KAUJ,OANAR,EAAM0B,UAAU,WACQ,iBAAlBvB,IACFhB,OAAOwC,eAAiB,kBAAMrB,EAAab,eAE5C,IAEI,CACLmB,QAASE,EAAWc,QACpB7C,MAAAA"}